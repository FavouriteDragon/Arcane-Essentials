import groovy.json.JsonOutput

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            name 'MinecraftForge'
            url 'https://maven.minecraftforge.net/'
        }
        maven {
            name 'Garden of Fancy'
            url 'https://maven.gofancy.wtf/releases'
        }
        maven {
            name 'Sponge'
            url 'https://repo.spongepowered.org/repository/maven-public/'
        }
        // Shading
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.+'
        classpath 'org.ajoberstar.grgit:grgit-gradle:3.1.1'
        classpath group: 'wtf.gofancy.fancygradle', name: 'wtf.gofancy.fancygradle.gradle.plugin', version: '1.1.+'
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }

    repositories.each {
        if (it instanceof MavenArtifactRepository && it.url.toString() == "https://files.minecraftforge.net/maven") {
            it.url = "https://maven.minecraftforge.net"
        }
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'wtf.gofancy.fancygradle'
apply plugin: 'java'


version = "1.0.2"
group = "com.favouritedragon.arcane_essentials" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ArcaneEssentials"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: "stable", version: "39-1.12"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'info'
        }
    }
}

repositories {
    google()
    mavenCentral()
    jcenter()
    maven {
        url = uri('https://www.cursemaven.com')
        content {
            includeGroup 'curse.maven'
        }
    }
    maven {
        name = 'Modrinth'
        url = uri('https://api.modrinth.com/maven')
        content {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        name = 'Sponge'
        url = uri('https://repo.spongepowered.org/maven')
    }
    maven {
        url = uri('https://maven.blamejared.com')
    }
    maven {
        url = uri('https://m2.dv8tion.net/releases')
    }
    maven {
        url = uri('https://jitpack.io')
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    // Add your mod's dependencies here, for example:
//    implementation fg.deobf("curse.maven:baubles-${baubles_projectid}:${baubles_fileid}")
//    implementation fg.deobf("mezz.jei:jei_${mc_version}:${jei_version}")
//    implementation fg.deobf("curse.maven:antique-atlas-${antiqueatlas_projectid}:${antiqueatlas_fileid}")

    // Shading JOML package
    implementation group: 'org.joml', name: 'joml', version: '1.10.1'

    // Wizardry Dep
    // External dependency that should be provided by the player (not included in the build)
    compileOnly files('libs/ElectroblobsWizardry-4.3.9.jar') // Replace with the correct path to your external JAR
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'pack.mcmeta'
        include 'mcmod.info'
    }

    duplicatesStrategy = 'include'
}

shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.runtimeClasspath]
    relocate 'org.joml', 'com.favouritedragon.arcane_essentials.shaded.org.joml'
}

//jar {
//    configurations.runtimeClasspath.each { file ->
//        from(zipTree(file.absolutePath)) {
//            include 'org/joml/**'
//            exclude 'META-INF/', 'META-INF/**'
//        }
//    }
//}

fancyGradle {
    patches {
        resources
        coremods
        asm
    }
}